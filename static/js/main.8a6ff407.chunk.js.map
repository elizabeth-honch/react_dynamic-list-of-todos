{"version":3,"sources":["components/TodoList/TodoList.jsx","components/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","title","filter","selectedId","handleChange","name","target","filterUser","props","setState","value","handleSelect","filterUserByCompleted","handleSelectUser","id","userId","selectUser","todos","this","className","type","placeholder","onChange","event","map","todo","key","completed","onClick","React","Component","request","url","options","fetch","then","res","json","data","catch","error","CurrentUser","user","updateUser","newUserId","newUser","email","phone","clearUser","defaultProps","App","selectedUserId","filterTodosByStatus","filterTodosByTitle","field","includes","preparedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a6ff407.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    title: '',\n    filter: '',\n    selectedId: '',\n  }\n\n  handleChange = ({ target }, name) => {\n    const { filterUser } = this.props;\n\n    this.setState({ [name]: target.value });\n    filterUser(target.value, name);\n  }\n\n  handleSelect = ({ target }) => {\n    const { filterUserByCompleted } = this.props;\n    const { value } = target;\n\n    this.setState({ filter: value });\n    filterUserByCompleted(value);\n  }\n\n  handleSelectUser = (id, userId) => {\n    const { selectUser } = this.props;\n\n    selectUser(userId);\n    this.setState({ selectedId: id });\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { title, filter, selectedId } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"TodoList__form\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            placeholder=\"choose Todo Title\"\n            onChange={event => this.handleChange(event, 'title')}\n            className=\"TodoList__input input\"\n          />\n          <select\n            value={filter}\n            name=\"completed\"\n            onChange={this.handleSelect}\n            className=\"TodoList__select select\"\n          >\n            <option value=\"\">filter by status</option>\n            <option value=\"all\">all</option>\n            <option value=\"active\">active</option>\n            <option value=\"completed\">completed</option>\n          </select>\n        </div>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                key={todo.id}\n                className={\n                  `TodoList__item\n                ${todo.completed\n                ? 'TodoList__item--checked'\n                : 'TodoList__item--unchecked'}`\n                }\n              >\n                <label>\n                  <input type=\"checkbox\" />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={\n                    `button ${selectedId === todo.id\n                      ? 'TodoList__user-button--selected'\n                      : 'TodoList__user-button'}`\n                  }\n                  type=\"button\"\n                  onClick={() => this.handleSelectUser(todo.id, todo.userId)}\n                >\n                  {`User ${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      userId: PropTypes.number.isRequired,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n  filterUser: PropTypes.func.isRequired,\n  filterUserByCompleted: PropTypes.func.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(res => res.json())\n  .then(res => res.data)\n  .catch(error => error);\n\nexport const getTodos = () => request('/todos');\nexport const getUser = id => request(`/users/${id}`);\n","// import { render } from 'node-sass';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.updateUser(this.props.userId);\n  }\n\n  componentDidUpdate() {\n    this.updateUser(this.props.userId);\n  }\n\n  updateUser(newUserId) {\n    if (this.state.user && this.state.user.id === newUserId) {\n      return;\n    }\n\n    getUser(newUserId)\n      .then((newUser) => {\n        this.setState({\n          user: newUser,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          user: null,\n        });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { id, name, email, phone } = user;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <>\n          <h2 className=\"CurrentUser__title\">{`Selected user:${id}`}</h2>\n          <h3 className=\"CurrentUser__name\">{name}</h3>\n          <p className=\"CurrentUser__email\">{email}</p>\n          <p className=\"CurrentUser__phone\">{phone}</p>\n          <button\n            type=\"button\"\n            className=\"CurrentUser__btn\"\n            onClick={() => clearUser(id)}\n          >\n            Clear\n          </button>\n        </>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }),\n  clearUser: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  user: {},\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n    const preparedTodos = todos.filter(todo => todo.title && todo.userId);\n\n    this.setState({\n      todos: preparedTodos,\n    });\n  }\n\n  selectUser = (selectedUserId) => {\n    this.setState({ selectedUserId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  filterTodosByStatus = (value) => {\n    if (value === 'all') {\n      this.setState(state => ({\n        todos: [...state.todos],\n      }));\n    } else if (value === 'completed') {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => todo.completed),\n      }));\n    } else if (value === 'active') {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => !todo.completed),\n      }));\n    }\n  }\n\n  filterTodosByTitle = (value, field) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo[field].includes(value)),\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            filterUser={this.filterTodosByTitle}\n            filterUserByCompleted={this.filterTodosByStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}